#!/usr/bin/env python3

import numpy as np
import serial
import time
import sys

# Find total time
if len(sys.argv) == 1:
    multiplier = 1.0
    print('3 HOUR PROGRAM STARTING')
else:
    multiplier = float(sys.argv[1])
    print(str(np.round(multiplier*3, 2))+' HOUR PROGRAM STARTING')

# Definitions
baud = 9600
#port = "/dev/tty.usbserial-ftDDL0UJ"
port = "/dev/ttyUSB0"

def write(serial, string):
    write_string = string+'\r\n'
    serial.write(write_string.encode('ascii'))

# Open serial port
try:
    s = serial.Serial(port, baud, timeout=1)
except:
    print('Serial port not found. Check port name.')
    exit()
if s.isOpen():
    write(s, 'SYSTEM:REMOTE')
    print(s.name + ' is open...')
else:
    print('Serial port error.')
    exit()

# Main script
print("PHASE 1: SIN 10 HZ 0.05 - 1.14 VPP RAMP 30 MIN")
for i in range(30):
    voltage = np.round((i/(30-1))*(1.14 - 0.05) + 0.05, 2)
    write_string = 'APPL:SIN 10 HZ, '+str(voltage)+' VPP'
    write(s, write_string)
    print('PHASE 1: ' + str(i) + '/30 MIN')    
    time.sleep(60*multiplier)
    
print("PHASE 2: SIN 10 HZ 1.14 VPP 120 MIN")
write(s, 'APPL:SIN 10 HZ, 1.14 VPP')
for i in range(120):
    print('PHASE 2: ' + str(i) + '/120 MIN')
    time.sleep(60*multiplier)
    
print("PHASE 3: SQU 4.5 HZ 2.12 VPP 30 MIN")
write(s, 'APPL:SQU 4.5 HZ, 2.12 VPP')
for i in range(30):
    print('PHASE 3: ' + str(i) + '/30 MIN')
    time.sleep(60*multiplier)

write(s, 'APPL:DC DEF, DEF, 0')
time.sleep(1)
print("COMPLETE! FUNCTION GENERATOR OFF.")        
